# @package _global_

defaults:
  - /benchmark/single_agent: fetch_test
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /habitat/simulator/sim_sensors@habitat_baselines.eval.extra_sim_sensors.third_rgb_sensor: third_rgb_sensor
  - /habitat_baselines/rl/policy/obs_transforms@habitat_baselines.rl.policy.agent_0.obs_transforms.add_virtual_keys:
    - add_virtual_keys_base
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_0: hl_pivot # hl_fixed 
  - /habitat_baselines/rl/policy/hierarchical_policy/defined_skills@habitat_baselines.rl.policy.agent_0.hierarchical_policy.defined_skills: key_point_skills_multi_agent
  - /habitat/task/lab_sensors:
    # For the oracle navigation
    - has_finished_oracle_nav
    - all_predicates
  - _self_

habitat.simulator.habitat_sim_v0.gpu_device_id: 0
habitat_baselines:
  verbose: False
  trainer_name: "ddppo"
  updater_name: "HRLPPO"
  distrib_updater_name: "HRLDDPPO"
  torch_gpu_id: 0
  video_fps: 30

  num_environments: 1
  num_updates: -1
  total_num_steps: 1e8
  log_interval: 1
  num_checkpoints: 10
  force_torch_single_threaded: True
  eval_keys_to_include_in_name: ['pddl_success']
  load_resume_state_config: False
  rollout_storage_name: "HrlRolloutStorage"
  evaluate: True
  use_pivot: True
  evaluator:
    _target_: habitat_baselines.rl.ppo.habitat_evaluator.HabitatEvaluator
  video_dir: "video_single/fetch_debug"
  image_dir: "video_dir/image_dir/"

  eval:
    should_load_ckpt: False
    video_option: ["disk"]
    image_option: []
    image_filter_list: []
    json_option : []
    video_option_new: False
    episode_stored: []
    vlm_eval: False
    vlm_compare: False

  rl:
    agent:
      type: "SingleAgentAccessMgr"
      num_agent_types: 1
      num_active_agents_per_type: [1]
      num_pool_agents_per_type: [1]
      agent_sample_interval: 20
      force_partner_sample_idx: -1
      # use_llm_agent: True
      use_dummy_agent: True
    policy:
      agent_0:
        hierarchical_policy:
          high_level_policy:
            termination_obs_name: "agents_within_threshold"
            # termination_obs_name: "is_holding"
            add_arm_rest: False
            policy_input_keys:
              - "articulated_agent_arm_rgb"
              - "articulated_agent_arm_depth"
              - "is_holding"
              - "obj_start_gps_compass"
              - "obj_goal_gps_compass"
              #- "other_agent_gps"
              - "obj_start_sensor"
              - "obj_goal_sensor"
              - "all_predicates"
            allowed_actions:
              - wait
              - pick_key_point
              - place_key_point
              - reset_arm
              - nav_to_key_point
              - nav_to_key_position
    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 1
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.0001
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 128
      use_gae: True
      gamma: 0.99
      tau: 0.95

    ddppo:
      sync_frac: 0.6
      # The PyTorch distributed backend to use
      distrib_backend: NCCL
      # Visual encoder backbone
      pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
      # Initialize with pretrained weights
      pretrained: False
      # Initialize just the visual encoder backbone with pretrained weights
      pretrained_encoder: False
      # Whether the visual encoder backbone will be trained.
      train_encoder: True
      # Whether to reset the critic linear layer
      reset_critic: False
      # Model parameters
      backbone: resnet18
      rnn_type: LSTM
      num_recurrent_layers: 2
